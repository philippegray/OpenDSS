function [Ia Ib Ic fundCurrents phaseAng gamma mu Pload Rdc] = ...
    solveDiode12(Valphabeta,L,R,Rdc_in,Ldc,h,Vdc_in,P_in,mu_i,gamma_i,phase_i)

global OpenDSSFileLoc

error = 1;
Vdc = Vdc_in;
Rdc = Rdc_in;
P = P_in;
errorFile = fopen([OpenDSSFileLoc,'errorFile.txt'], 'w');
if P_in > 3 %restricting to 2 pu
   c = clock;
   P = 3;
   fprintf(errorFile,'%2.0fh:%2.0fm:%2.0fs P > Pmax = 3.0 pu. Setting P = 3.0 pu.\n',c(4),c(5),c(6));
end
if P_in <= 0 %restricting to 2 pu
    c = clock;
    Iphase = zeros(h,3);
    for i = 1:h
        Iphase(i,1) = i;
    end
    Iphase(1,2) = 100;
    Ia = Iphase;
    Ib = Iphase;
    Ic = Iphase;
    fundCurrents = [0,0;0,-120;0,+120];
    phaseAng = 0;
    gamma = 0;
    mu = 0;
    Pload = 0;
    return;
end
Rdc =  134.0499;

for i = 1:2:h
    while(error ~= 0)
        %     [Ia Ib Ic fundCurrents phaseAng gamma mu Pload error] =...
        %         solveDiode12Model(Valphabeta,L,R,Rdc,Ldc,h,Vdc,P,mu_i,gamma_i,phase_i);
        %mu_i_test = [0.0741731211882849;0.0744687866143406;0.0748357290917689;0.0748038253986227;0.0743304292330296;0.0740163880665607;0.0741731211872878;0.0744687866156234;0.0748357290921303;0.0748038253986971;0.0743304292332207;0.0740163880666051;];
        %gamma_i_test = [0.521487255513335;0.526324014770379;0.529651447168231;0.526125482837453;0.519673970684915;0.518330482615480;0.521487255513336;0.526324014770379;0.529651447168231;0.526125482837453;0.519673970684915;0.518330482615480;];
        %phase_i_test = -0.044122085080559;
        
        [Ia Ib Ic fundCurrents phaseAng gamma mu Pload error] =...
            solveDiode12Model(Valphabeta,L,R,Rdc,Ldc,i,Vdc,P,mu_i_test,gamma_i_test,phase_i_test);
        
        %Made a big change for error ==1
        %     if error == 1
        %         Rdc = Rdc*2;
        %     else
        ratio = Pload/P;
        if abs(1-ratio)*100 > 1.02
            c = clock;
            Rdc = Rdc*ratio;
            error = 2;
            fprintf(errorFile,'%2.0fh:%2.0fm:%2.0fs Changing Rdc from %1.2f to %1.2f\n',c(4),c(5),c(6),Rdc/ratio,Rdc);
        elseif error == 1
            Rdc=Rdc*1.1;
        end
    end
    mu_prev = mu;
    gamma_prev = gamma;
    phaseAng_prev = phaseAng;
    Rdc_prev = Rdc;
end

fclose(errorFile);